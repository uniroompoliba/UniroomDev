 regBtn.setOnClickListener {

            //Avvio l'esecuzione in un nuovo thread poichè nel main thread non può andare

            try
            {
                Thread {

                    //volley request
                    var url = "http://uniroompoliba.altervista.org/public/genReg.php"
                    var myRQ = Volley.newRequestQueue(this)

                    //Aggiungiamo gli header per accettare la comunicazione json
                    fun setMyHeader()
                    {
                        var headers = HashMap<String, String>()
                        headers.put("Content-Type", "application/json")
                        headers.put("Accept", "application/json")
                    }

                    setMyHeader()

                    /*
                    * Procedura del collegamento col db correttamente effettuata. Ora devo inviare i dati e registrarli nel db
                     */

                    //prendo i dati dalle EditText

                    val nomeUtente : String? = findViewById<EditText>(R.id.NomeR).text.toString().trim()
                    val cognomeUtente : String? = findViewById<EditText>(R.id.cognomeR).text.toString().trim()
                    val emailUtente : String? = findViewById<EditText>(R.id.emailR).text.toString().trim()
                    val pwUtente : String? = findViewById<EditText>(R.id.passwordR).text.toString().trim()
                    val ddnUtente : String? = findViewById<EditText>(R.id.dataNR).text.toString().trim()
                    val matUtente : String? = findViewById<EditText>(R.id.matR).text.toString().trim()

                    //Controlli di validità sull'input
                    if (matUtente!!.length == 7 && ddnUtente!!.length == 10) {
                        //input validi al primo step - procediamo con i controlli di 2 livello
                        /*
                             Controlliamo se è stata inserita una mail corretta, una data di nascita correttamente.
                             Il resto sono stringhe generiche quindi non abbiamo problemi
                             */

                        var res = contSlash(ddnUtente)
                        var resEmail = contEmail(emailUtente)

                        if (res == true || resEmail == true)
                        {
                            if (res == true)
                                Looper.prepare()
                                Toast.makeText(this, "Formato data di nascita non corretto. Troppi / o inseriti dei caratteri non corretti. Riprovare", Toast.LENGTH_LONG)

                            if (resEmail == true)
                                Looper.prepare()
                                Toast.makeText(this, "Formato e-mai non corretto. Troppi @ presenti. Riprovare", Toast.LENGTH_LONG)
                        }
                        else
                        {
                            //Tutti i controlli sono andati a buon fine. Invio i dati e completo la registrazione
                            //Creo il JSonObject
                            val utenti: JSONObject = JSONObject()
                            utenti.put("matricola", matUtente)
                            utenti.put("nome", nomeUtente)
                            utenti.put("cognome", cognomeUtente)
                            utenti.put("email", emailUtente)
                            utenti.put("dataNascita", ddnUtente)
                            utenti.put("password", pwUtente)


                            //Request
                            val inviaDatiServer = JsonObjectRequest(Request.Method.POST, url, utenti,
                                    Response.Listener { response ->
                                        //Toast per indicare che è andato tutto bene
                                        Toast.makeText(this, "Registrazione correttamente avvenuta", Toast.LENGTH_LONG).show()
                                        //Passo alla prossima activity
                                    },
                                    Response.ErrorListener { error ->
                                        Toast.makeText(this,error.toString(),Toast.LENGTH_LONG)
                                    })

                            myRQ.add(inviaDatiServer)

                        }
                    }

                    else
                    {
                        //Input non validi
                            Looper.prepare()
                        Toast.makeText(this,"Input non corretto - Matricola non di 7 caratteri o data di nascita in formato non corretto ",Toast.LENGTH_LONG).show()
                    }

                }.start()

            }